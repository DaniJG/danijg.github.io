{"componentChunkName":"component---node-modules-gatsby-theme-chronoblog-src-templates-note-js","path":"/notes/open-source-node-apn/","result":{"data":{"mdx":{"id":"c1bd29b0-6576-58f8-9c3b-98f88f602f27","excerpt":"Node-apn node-apn  is a library to simplify the task of sending apple push notifications from Node.js applications. Contribution In theâ€¦","frontmatter":{"title":"Added HTTP proxy functionality to node-apn","date":"2017-11-16T00:00:00.000Z","tags":["open-source","node","node-apn","apple-push-notifications"],"cover":null},"fields":{"slug":"/notes/open-source-node-apn/"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Added HTTP proxy functionality to node-apn\",\n  \"date\": \"2017-11-16T00:00:00.000Z\",\n  \"tags\": [\"open-source\", \"node\", \"node-apn\", \"apple-push-notifications\"],\n  \"link\": \"https://github.com/node-apn/node-apn/pull/602\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", {\n    \"id\": \"node-apn\"\n  }, \"Node-apn\"), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/node-apn/node-apn\"\n  }), \"node-apn\"), \" is a library to simplify the task of sending apple push notifications from Node.js applications.\"), mdx(\"h2\", {\n    \"id\": \"contribution\"\n  }, \"Contribution\"), mdx(\"p\", null, \"In the corporate environment I was working on, request to the Internet had to go through an HTTP proxy or else they would be blocked.\"), mdx(\"p\", null, \"We were building an iOS application with a Node.js backend from where we wanted to send push notifications. For that we wanted to use the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"node-apn\"), \" library but we could only do so if it supported connecting to apple's servers through a proxy.\"), mdx(\"p\", null, \"Since that wasn't a feature currently available, I submitted a PR for it: \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/node-apn/node-apn/pull/602\"\n  }), \"https://github.com/node-apn/node-apn/pull/602\")));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"id":"c1bd29b0-6576-58f8-9c3b-98f88f602f27"}},"staticQueryHashes":["1961101537","2542493696"]}